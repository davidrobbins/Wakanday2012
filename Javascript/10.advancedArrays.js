﻿﻿/* Javascript Fundementals *//* 10. Advanced Arrays *//* Callbacks - Passing functions as a parameter to other functions.*//* Some array methods require us to pass a function as a parameter. */var fruit = ["apples", "oranges", "bananas", "grapes"];// There callback methods have a specific signature.//function name(value, index, array) { }//1. E V E R Y//	This method will return true or false. It will test every element in the array.// The "every" method will only return true if every element returns true against the// test we write.function isString(value, index, array) {	return typeof value === "string";}function isLengthOfOne(value, index, array) {	return value.length === 1;}//var answer = fruit.every(isString);//answer//var answer = fruit.every(isLengthOfOne);//answer//2. S O M E//	This method will return true or false. It will test every element in the array.// The "some" method will  return true if one element returns true against the// test we write.function startsWithG(value, index, array) {	return value[0] === "g";	//return value[0] === "z";}function startsWithAB(value, index, array) {	return value[0] === "a" || value[0] === "b";	//return value[0] === "z";}function changeLetterA2Z(value, index, array) {	array[index] = array[index].replace('a', 'z');}function iLikeFruit(value, index, array) {	return "I like " + value;}//var answer = fruit.some(startsWithG);//answer//var answer = fruit.some(startsWithAB);//answer//var result = fruit.filter(startsWithAB);//result//fruit.forEach(changeLetterA2Z);//fruit//var likeFruits = fruit.map(iLikeFruit);//likeFruits